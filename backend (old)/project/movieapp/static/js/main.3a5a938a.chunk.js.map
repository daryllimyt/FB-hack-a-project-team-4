{"version":3,"sources":["MovieItem.js","ListOfMovies.js","components/MovieForm.js","Genre.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["MovieItem","className","style","backgroundImage","encodeURIComponent","this","props","data","title","attendee","length","genre","location","date","toDateString","React","Component","ListOfMovies","map","movie","MovieForm","handleChange","e","setState","target","value","handleCalendarChange","datetime","handleSubmit","alert","state","preventDefault","venues","onSubmit","onClick","closeModal","type","onChange","selected","showTimeSelect","dateFormat","Genre","name","Main","movieFormOpen","all_movies","featured_movies","most_recent","genre_filter","genres","got_movies","toggleOpenMovieForm","movies","x","Object","assign","split","Date","slice","sort","a","b","Math","sign","reduce","xs","includes","push","forceUpdate","maybeRenderBackButton","isOpen","onRequestClose","renderMovieList","filterGenre","bind","filter","evt","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3a5a938a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MovieItem.css\";\n\nexport class MovieItem extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"movie\" style={{backgroundImage: `url(https://cataas.com/cat/says/${encodeURIComponent(this.props.data.title)})`}}>\n\t\t\t\t<div className=\"buttom\">\n\t\t\t\t\t<div className=\"name\">{this.props.data.title}</div>\n\t\t\t\t\t<div className=\"watchNumber\">{this.props.data.attendee.length} going</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"expansion\">\n\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t<div>{this.props.data.genre}</div>\n\t\t\t\t\t\t<div>Venue: {this.props.data.location}</div>\n\t\t\t\t\t\t<div>Date: {this.props.data.date.toDateString()}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"button\">Go!</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from \"react\";\nimport { MovieItem } from './MovieItem';\n\nexport class ListOfMovies extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"horizontal-list\">\n\t\t\t\t{this.props.data.map(movie => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<MovieItem data={movie} />\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {Component} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass MovieForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      venues: 'Vue Picadilly',\n      datetime: '',\n    }\n  }\n  handleChange = (e) => {\n    this.setState({title: e.target.value});\n  }\n  handleCalendarChange = (datetime) => {\n    this.setState({ datetime })\n  }\n  handleSubmit = (e) => {\n    // add post url\n    alert('A name was submitted: ' + this.state.datetime);\n    e.preventDefault();\n  }\n  render() {\n    const { title, venues, datetime }  = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <button onClick={this.props.closeModal}>close</button>\n        <label>\n          Movie Title\n          <input type=\"text\" value={title} onChange={this.handleChange}/>\n        </label>\n        <label>\n          Venue\n          <select>\n            <option>\n              {venues}\n            </option>\n          </select>\n        </label>\n        <label>\n          Screening Date\n          <div>\n              <DatePicker\n                selected={datetime}\n                onChange={this.handleCalendarChange}\n                showTimeSelect\n                dateFormat=\"Pp\"\n              />\n          </div>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n\nexport default MovieForm\n","import React from \"react\";\nimport \"./Genre.css\";\nexport class Genre extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"genre\" onClick={this.props.onClick}>{this.props.name}</div>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport \"./Main.css\";\nimport { ListOfMovies } from './ListOfMovies';\nimport MovieForm from './components/MovieForm';\nimport { Genre } from './Genre';\nimport Modal from 'react-modal';\n\nexport class Main extends React.Component {\n\tconstructor () {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmovieFormOpen: false,\n\t\t\tall_movies: [],\n\t\t\tfeatured_movies: [],\n\t\t\tmost_recent: [],\n\t\t\tgenre_filter: null,\n\t\t\tgenres: []\n\t\t};\n\t\tthis.got_movies([\n\t\t\t{\n\t\t\t\ttitle: \"Hello world\",\n\t\t\t\tattendee: \"0 1 2 3 4 5 6 7\",\n\t\t\t\tdate: \"2020-01-01T00:00:00Z\",\n\t\t\t\tgenre: \"Horror\",\n\t\t\t\tlocation: \"Some Cinema, London\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"Hello!\",\n\t\t\t\tattendee: \"0 1 2 3\",\n\t\t\t\tdate: \"2020-01-02T00:00:00Z\",\n\t\t\t\tgenre: \"Comedy\",\n\t\t\t\tlocation: \"Cinema 2, London\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: \"world!\",\n\t\t\t\tattendee: \"0 1 2 3 4 5 6\",\n\t\t\t\tdate: \"2020-01-03T00:00:00Z\",\n\t\t\t\tgenre: \"Romance\",\n\t\t\t\tlocation: \"University College London, London\"\n\t\t\t},\n\t\t]);\n\n\t\tthis.toggleOpenMovieForm = () => {\n\t\t\tthis.setState({\n\t\t\t\tmovieFormOpen: !this.state.movieFormOpen\n\t\t\t})\n\t\t}\n\t}\n\n\tgot_movies(movies) {\n\t\tthis.state.all_movies = movies.map(x => Object.assign(x, {\n\t\t\tattendee: x.attendee.split(\" \"),\n\t\t\tdate: new Date(x.date)\n\t\t}));\n\t\tthis.state.featured_movies = this.state.all_movies.slice().sort((a, b) => Math.sign(b.attendee.length - a.attendee.length))\n\t\tthis.state.most_recent = this.state.all_movies.slice().sort((a, b) => Math.sign(new Date(b.date) - new Date(a.date)));\n\t\tthis.state.genres = this.state.all_movies.map(x => x.genre).reduce((xs, x) => {\n\t\t\tif (xs.includes(x)) {\n\t\t\t\treturn xs;\n\t\t\t} else {\n\t\t\t\txs.push(x);\n\t\t\t\treturn xs;\n\t\t\t}\n\t\t}, [])\n\t\tthis.forceUpdate()\n\t}\n\tcloseModal = () => {\n\t\tthis.setState({\n\t\t\tmovieFormOpen: false\n\t\t})\n\t}\n\n\trender () {\n\t\treturn (<div className=\"main\">\n\t\t\t<div className=\"topbar\">\n\t\t\t\t{this.maybeRenderBackButton()}\n\t\t\t\t<div className=\"appname\">MovieApp</div>\n\t\t\t\t<div className=\"button\" onClick={this.toggleOpenMovieForm}>Add new proposal</div>\n\t\t\t\t<Modal isOpen={this.state.movieFormOpen} onRequestClose={this.closeModal}>\n\t\t\t\t\t<MovieForm closeModal={this.closeModal}/>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\n\t\t\t{this.renderMovieList()}\n\t\t</div>)\n\t}\n\n\trenderMovieList() {\n\t\tif (this.state.genre_filter === null) {\n\t\t\treturn [\n\t\t\t\t<h2>Featured</h2>,\n\t\t\t\t<ListOfMovies data={this.state.featured_movies} />,\n\t\t\t\t<h2>Genre</h2>,\n\t\t\t\t<div className=\"horizontal-list\">\n\t\t\t\t\t{this.state.genres.map(x => <Genre name={x} onClick={this.filterGenre.bind(this, x)} />)}\n\t\t\t\t</div>,\n\t\t\t\t<h2>Most recent</h2>,\n\t\t\t\t<ListOfMovies data={this.state.most_recent} />,\n\t\t\t]\n\t\t} else {\n\t\t\treturn [\n\t\t\t\t<h2>{this.state.genre_filter} movies:</h2>,\n\t\t\t\t<ListOfMovies data={this.state.all_movies.filter(x => x.genre === this.state.genre_filter)} />,\n\t\t\t]\n\t\t}\n\t}\n\n\tmaybeRenderBackButton() {\n\t\tif (this.state.genre_filter !== null) {\n\t\t\treturn (\n\t\t\t\t<div className=\"button back-btn\" onClick={this.filterGenre.bind(this, null)}>Back</div>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tfilterGenre(name, evt) {\n\t\tthis.setState({\n\t\t\tgenre_filter: name\n\t\t})\n\t}\n}\n","import React from 'react';\nimport './App.css';\nimport { Main } from \"./Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}